name: Deploy Frontend Docker Image ECR

on:
  push:
    branches:
      - master
    paths:
      - 'client/**'
      - .github/workflows/aws/eks/deploy-image-client-ecr.yml
      - iac/k8s/client-deployment.yaml
      - iac/k8s/client-cluster-ip-service.yaml
  pull_request:
    branches:
      - master
    paths:
      - 'client/**'
      - .github/workflows/aws/eks/deploy-image-client-ecr.yml
      - iac/k8s/client-deployment.yaml
      - iac/k8s/client-cluster-ip-service.yaml
    workflow_dispatch:

env:
  AWS_ECR_REGISTRY: 605313441167.dkr.ecr.ap-southeast-2.amazonaws.com
  AWS_ECR_REPOSITORY: exampleapp-client
  K8S_NAMESPACE: ${{ vars.AWS_REGION }}
  SHA: $(git rev-parse HEAD)

jobs:
  build-client-docker-image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      # if: github.ref == 'refs/heads/master'
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ SHA }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      uses: docker/build-push-action@v2
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      with:
        context: ./client
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: |
          ${{env.AWS_ECR_REGISTRY}}/${{env.AWS_ECR_REPOSITORY}}:latest
          ${{env.AWS_ECR_REGISTRY}}/${{env.AWS_ECR_REPOSITORY}}:${{ SHA }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: '${{env.AWS_ECR_REGISTRY}}/${{env.AWS_ECR_REPOSITORY}}:${{github.run_number}}'
    #     format: 'table'
    #     exit-code: '0'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'HIGH,CRITICAL'

    - name: Restart the deployment
      uses: Consensys/kubernetes-action@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      with:
        args: rollout restart deployment.apps/${{ secrets.APPLICATION_NAME }}-client -n ${{ env.K8S_NAMESPACE }}

    - uses: tale/kubectl-action@v1
      with:
        base64-kube-config: ${{ secrets.KUBE_CONFIG }}
    - run: kubectl get pods
